// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: ldproto/ldproto.proto

package lss

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Error int32

const (
	Error_LSS_NOERR         Error = 0
	Error_LSS_IOERR         Error = 1
	Error_LSS_BADPROBLEMID  Error = 2
	Error_LSS_BADSOLUTIONID Error = 3
	Error_LSS_BADBUCKETID   Error = 4
	Error_LSS_BADTOKEN      Error = 5
	Error_LSS_BADDATA       Error = 6
)

// Enum value maps for Error.
var (
	Error_name = map[int32]string{
		0: "LSS_NOERR",
		1: "LSS_IOERR",
		2: "LSS_BADPROBLEMID",
		3: "LSS_BADSOLUTIONID",
		4: "LSS_BADBUCKETID",
		5: "LSS_BADTOKEN",
		6: "LSS_BADDATA",
	}
	Error_value = map[string]int32{
		"LSS_NOERR":         0,
		"LSS_IOERR":         1,
		"LSS_BADPROBLEMID":  2,
		"LSS_BADSOLUTIONID": 3,
		"LSS_BADBUCKETID":   4,
		"LSS_BADTOKEN":      5,
		"LSS_BADDATA":       6,
	}
)

func (x Error) Enum() *Error {
	p := new(Error)
	*p = x
	return p
}

func (x Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Error) Descriptor() protoreflect.EnumDescriptor {
	return file_ldproto_ldproto_proto_enumTypes[0].Descriptor()
}

func (Error) Type() protoreflect.EnumType {
	return &file_ldproto_ldproto_proto_enumTypes[0]
}

func (x Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Error.Descriptor instead.
func (Error) EnumDescriptor() ([]byte, []int) {
	return file_ldproto_ldproto_proto_rawDescGZIP(), []int{0}
}

// Generic msgs
type ProblemIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId string `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
}

func (x *ProblemIdentifier) Reset() {
	*x = ProblemIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ldproto_ldproto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemIdentifier) ProtoMessage() {}

func (x *ProblemIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_ldproto_ldproto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemIdentifier.ProtoReflect.Descriptor instead.
func (*ProblemIdentifier) Descriptor() ([]byte, []int) {
	return file_ldproto_ldproto_proto_rawDescGZIP(), []int{0}
}

func (x *ProblemIdentifier) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type ProblemEntityIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId string `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	EntityId  string `protobuf:"bytes,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *ProblemEntityIdentifier) Reset() {
	*x = ProblemEntityIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ldproto_ldproto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemEntityIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemEntityIdentifier) ProtoMessage() {}

func (x *ProblemEntityIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_ldproto_ldproto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemEntityIdentifier.ProtoReflect.Descriptor instead.
func (*ProblemEntityIdentifier) Descriptor() ([]byte, []int) {
	return file_ldproto_ldproto_proto_rawDescGZIP(), []int{1}
}

func (x *ProblemEntityIdentifier) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *ProblemEntityIdentifier) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

type ProblemBucketIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId string `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	MachineId string `protobuf:"bytes,2,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	BucketIdx uint32 `protobuf:"varint,3,opt,name=bucket_idx,json=bucketIdx,proto3" json:"bucket_idx,omitempty"`
}

func (x *ProblemBucketIdentifier) Reset() {
	*x = ProblemBucketIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ldproto_ldproto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemBucketIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemBucketIdentifier) ProtoMessage() {}

func (x *ProblemBucketIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_ldproto_ldproto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemBucketIdentifier.ProtoReflect.Descriptor instead.
func (*ProblemBucketIdentifier) Descriptor() ([]byte, []int) {
	return file_ldproto_ldproto_proto_rawDescGZIP(), []int{2}
}

func (x *ProblemBucketIdentifier) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *ProblemBucketIdentifier) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *ProblemBucketIdentifier) GetBucketIdx() uint32 {
	if x != nil {
		return x.BucketIdx
	}
	return 0
}

// ReadProblem
type ReadProblemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemStr  string `protobuf:"bytes,1,opt,name=problem_str,json=problemStr,proto3" json:"problem_str,omitempty"`
	ProblemFile string `protobuf:"bytes,2,opt,name=problem_file,json=problemFile,proto3" json:"problem_file,omitempty"`
}

func (x *ReadProblemRequest) Reset() {
	*x = ReadProblemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ldproto_ldproto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadProblemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadProblemRequest) ProtoMessage() {}

func (x *ReadProblemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ldproto_ldproto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadProblemRequest.ProtoReflect.Descriptor instead.
func (*ReadProblemRequest) Descriptor() ([]byte, []int) {
	return file_ldproto_ldproto_proto_rawDescGZIP(), []int{3}
}

func (x *ReadProblemRequest) GetProblemStr() string {
	if x != nil {
		return x.ProblemStr
	}
	return ""
}

func (x *ReadProblemRequest) GetProblemFile() string {
	if x != nil {
		return x.ProblemFile
	}
	return ""
}

// LS Problem msgs
type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	InvUnitCost float64 `protobuf:"fixed64,3,opt,name=inv_unit_cost,json=invUnitCost,proto3" json:"inv_unit_cost,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ldproto_ldproto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_ldproto_ldproto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_ldproto_ldproto_proto_rawDescGZIP(), []int{4}
}

func (x *Product) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Product) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Product) GetInvUnitCost() float64 {
	if x != nil {
		return x.InvUnitCost
	}
	return 0
}

type Demand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId   string  `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	PeriodIdx   uint32  `protobuf:"varint,3,opt,name=period_idx,json=periodIdx,proto3" json:"period_idx,omitempty"`
	Quantity    float64 `protobuf:"fixed64,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	UnitRevenue float64 `protobuf:"fixed64,5,opt,name=unit_revenue,json=unitRevenue,proto3" json:"unit_revenue,omitempty"`
}

func (x *Demand) Reset() {
	*x = Demand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ldproto_ldproto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Demand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Demand) ProtoMessage() {}

func (x *Demand) ProtoReflect() protoreflect.Message {
	mi := &file_ldproto_ldproto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Demand.ProtoReflect.Descriptor instead.
func (*Demand) Descriptor() ([]byte, []int) {
	return file_ldproto_ldproto_proto_rawDescGZIP(), []int{5}
}

func (x *Demand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Demand) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *Demand) GetPeriodIdx() uint32 {
	if x != nil {
		return x.PeriodIdx
	}
	return 0
}

func (x *Demand) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Demand) GetUnitRevenue() float64 {
	if x != nil {
		return x.UnitRevenue
	}
	return 0
}

type Machine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FixedPeriodCost     float64            `protobuf:"fixed64,2,opt,name=fixed_period_cost,json=fixedPeriodCost,proto3" json:"fixed_period_cost,omitempty"`
	ProductionRates     map[string]float64 `protobuf:"bytes,3,rep,name=production_rates,json=productionRates,proto3" json:"production_rates,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	ChangeoverDurations map[string]float64 `protobuf:"bytes,4,rep,name=changeover_durations,json=changeoverDurations,proto3" json:"changeover_durations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
}

func (x *Machine) Reset() {
	*x = Machine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ldproto_ldproto_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine) ProtoMessage() {}

func (x *Machine) ProtoReflect() protoreflect.Message {
	mi := &file_ldproto_ldproto_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine.ProtoReflect.Descriptor instead.
func (*Machine) Descriptor() ([]byte, []int) {
	return file_ldproto_ldproto_proto_rawDescGZIP(), []int{6}
}

func (x *Machine) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Machine) GetFixedPeriodCost() float64 {
	if x != nil {
		return x.FixedPeriodCost
	}
	return 0
}

func (x *Machine) GetProductionRates() map[string]float64 {
	if x != nil {
		return x.ProductionRates
	}
	return nil
}

func (x *Machine) GetChangeoverDurations() map[string]float64 {
	if x != nil {
		return x.ChangeoverDurations
	}
	return nil
}

type Problem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NumPeriods   uint32     `protobuf:"varint,2,opt,name=num_periods,json=numPeriods,proto3" json:"num_periods,omitempty"`
	PeriodLength uint32     `protobuf:"varint,3,opt,name=period_length,json=periodLength,proto3" json:"period_length,omitempty"`
	Products     []*Product `protobuf:"bytes,4,rep,name=products,proto3" json:"products,omitempty"`
	Demands      []*Demand  `protobuf:"bytes,5,rep,name=demands,proto3" json:"demands,omitempty"`
	Machines     []*Machine `protobuf:"bytes,6,rep,name=machines,proto3" json:"machines,omitempty"`
}

func (x *Problem) Reset() {
	*x = Problem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ldproto_ldproto_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Problem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Problem) ProtoMessage() {}

func (x *Problem) ProtoReflect() protoreflect.Message {
	mi := &file_ldproto_ldproto_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Problem.ProtoReflect.Descriptor instead.
func (*Problem) Descriptor() ([]byte, []int) {
	return file_ldproto_ldproto_proto_rawDescGZIP(), []int{7}
}

func (x *Problem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Problem) GetNumPeriods() uint32 {
	if x != nil {
		return x.NumPeriods
	}
	return 0
}

func (x *Problem) GetPeriodLength() uint32 {
	if x != nil {
		return x.PeriodLength
	}
	return 0
}

func (x *Problem) GetProducts() []*Product {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *Problem) GetDemands() []*Demand {
	if x != nil {
		return x.Demands
	}
	return nil
}

func (x *Problem) GetMachines() []*Machine {
	if x != nil {
		return x.Machines
	}
	return nil
}

// Solution Improvement msgs
type Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// BucketID
	MachineId  string                      `protobuf:"bytes,1,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	BucketIdx  int32                       `protobuf:"varint,2,opt,name=bucket_idx,json=bucketIdx,proto3" json:"bucket_idx,omitempty"`
	Margin     float64                     `protobuf:"fixed64,3,opt,name=margin,proto3" json:"margin,omitempty"`
	DemandsFf  map[string]float64          `protobuf:"bytes,4,rep,name=demands_ff,json=demandsFf,proto3" json:"demands_ff,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	ProdsSeq   []*Column_ProductInSequence `protobuf:"bytes,5,rep,name=prods_seq,json=prodsSeq,proto3" json:"prods_seq,omitempty"`
	IsSelected bool                        `protobuf:"varint,6,opt,name=is_selected,json=isSelected,proto3" json:"is_selected,omitempty"`
	IsFixed    bool                        `protobuf:"varint,7,opt,name=is_fixed,json=isFixed,proto3" json:"is_fixed,omitempty"`
}

func (x *Column) Reset() {
	*x = Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ldproto_ldproto_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_ldproto_ldproto_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_ldproto_ldproto_proto_rawDescGZIP(), []int{8}
}

func (x *Column) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *Column) GetBucketIdx() int32 {
	if x != nil {
		return x.BucketIdx
	}
	return 0
}

func (x *Column) GetMargin() float64 {
	if x != nil {
		return x.Margin
	}
	return 0
}

func (x *Column) GetDemandsFf() map[string]float64 {
	if x != nil {
		return x.DemandsFf
	}
	return nil
}

func (x *Column) GetProdsSeq() []*Column_ProductInSequence {
	if x != nil {
		return x.ProdsSeq
	}
	return nil
}

func (x *Column) GetIsSelected() bool {
	if x != nil {
		return x.IsSelected
	}
	return false
}

func (x *Column) GetIsFixed() bool {
	if x != nil {
		return x.IsFixed
	}
	return false
}

type SolutionEntityIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId  string    `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	SolutionId string    `protobuf:"bytes,2,opt,name=solution_id,json=solutionId,proto3" json:"solution_id,omitempty"`
	ImpToken   string    `protobuf:"bytes,3,opt,name=imp_token,json=impToken,proto3" json:"imp_token,omitempty"`
	Columns    []*Column `protobuf:"bytes,4,rep,name=columns,proto3" json:"columns,omitempty"`
}

func (x *SolutionEntityIdentifier) Reset() {
	*x = SolutionEntityIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ldproto_ldproto_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolutionEntityIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolutionEntityIdentifier) ProtoMessage() {}

func (x *SolutionEntityIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_ldproto_ldproto_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolutionEntityIdentifier.ProtoReflect.Descriptor instead.
func (*SolutionEntityIdentifier) Descriptor() ([]byte, []int) {
	return file_ldproto_ldproto_proto_rawDescGZIP(), []int{9}
}

func (x *SolutionEntityIdentifier) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *SolutionEntityIdentifier) GetSolutionId() string {
	if x != nil {
		return x.SolutionId
	}
	return ""
}

func (x *SolutionEntityIdentifier) GetImpToken() string {
	if x != nil {
		return x.ImpToken
	}
	return ""
}

func (x *SolutionEntityIdentifier) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

type Column_ProductInSequence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId   string `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProdStart   uint32 `protobuf:"varint,2,opt,name=prod_start,json=prodStart,proto3" json:"prod_start,omitempty"`
	ProdMinutes uint32 `protobuf:"varint,3,opt,name=prod_minutes,json=prodMinutes,proto3" json:"prod_minutes,omitempty"`
}

func (x *Column_ProductInSequence) Reset() {
	*x = Column_ProductInSequence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ldproto_ldproto_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Column_ProductInSequence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column_ProductInSequence) ProtoMessage() {}

func (x *Column_ProductInSequence) ProtoReflect() protoreflect.Message {
	mi := &file_ldproto_ldproto_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column_ProductInSequence.ProtoReflect.Descriptor instead.
func (*Column_ProductInSequence) Descriptor() ([]byte, []int) {
	return file_ldproto_ldproto_proto_rawDescGZIP(), []int{8, 1}
}

func (x *Column_ProductInSequence) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *Column_ProductInSequence) GetProdStart() uint32 {
	if x != nil {
		return x.ProdStart
	}
	return 0
}

func (x *Column_ProductInSequence) GetProdMinutes() uint32 {
	if x != nil {
		return x.ProdMinutes
	}
	return 0
}

var File_ldproto_ldproto_proto protoreflect.FileDescriptor

var file_ldproto_ldproto_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6c, 0x64, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x64, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6c, 0x73, 0x78, 0x63, 0x67, 0x2e, 0x64,
	0x74, 0x22, 0x32, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x76, 0x0a, 0x17,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x64, 0x78, 0x22, 0x58, 0x0a, 0x12, 0x52, 0x65, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x53, 0x74, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x51,
	0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x69, 0x6e, 0x76, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x55, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x73,
	0x74, 0x22, 0x95, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x64, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x72,
	0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x75, 0x6e,
	0x69, 0x74, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x22, 0x83, 0x03, 0x0a, 0x07, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x43, 0x6f, 0x73,
	0x74, 0x12, 0x51, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6c, 0x73,
	0x78, 0x63, 0x67, 0x2e, 0x64, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x5d, 0x0a, 0x14, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c, 0x73, 0x78, 0x63, 0x67, 0x2e, 0x64, 0x74, 0x2e, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6f, 0x76, 0x65, 0x72,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6f, 0x76, 0x65, 0x72, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x42, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x46, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x6f, 0x76, 0x65, 0x72, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xed, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2d, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x73, 0x78, 0x63, 0x67, 0x2e,
	0x64, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x73, 0x78, 0x63, 0x67, 0x2e, 0x64, 0x74,
	0x2e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73,
	0x12, 0x2d, 0x0a, 0x08, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x73, 0x78, 0x63, 0x67, 0x2e, 0x64, 0x74, 0x2e, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x08, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x22,
	0xcf, 0x03, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e,
	0x12, 0x3e, 0x0a, 0x0a, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x5f, 0x66, 0x66, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c, 0x73, 0x78, 0x63, 0x67, 0x2e, 0x64, 0x74, 0x2e,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x46, 0x66,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x46, 0x66,
	0x12, 0x3f, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x73, 0x78, 0x63, 0x67, 0x2e, 0x64, 0x74, 0x2e, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x53,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x73, 0x53, 0x65,
	0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x46, 0x69, 0x78, 0x65, 0x64, 0x1a, 0x3c, 0x0a,
	0x0e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x46, 0x66, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x74, 0x0a, 0x11, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65,
	0x73, 0x22, 0xa3, 0x01, 0x0a, 0x18, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x6d, 0x70, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6d, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2a, 0x0a, 0x07, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c,
	0x73, 0x78, 0x63, 0x67, 0x2e, 0x64, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x07,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x2a, 0x8a, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x53, 0x53, 0x5f, 0x4e, 0x4f, 0x45, 0x52, 0x52, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x53, 0x53, 0x5f, 0x49, 0x4f, 0x45, 0x52, 0x52, 0x10, 0x01, 0x12,
	0x14, 0x0a, 0x10, 0x4c, 0x53, 0x53, 0x5f, 0x42, 0x41, 0x44, 0x50, 0x52, 0x4f, 0x42, 0x4c, 0x45,
	0x4d, 0x49, 0x44, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x4c, 0x53, 0x53, 0x5f, 0x42, 0x41, 0x44,
	0x53, 0x4f, 0x4c, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x49, 0x44, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f,
	0x4c, 0x53, 0x53, 0x5f, 0x42, 0x41, 0x44, 0x42, 0x55, 0x43, 0x4b, 0x45, 0x54, 0x49, 0x44, 0x10,
	0x04, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x53, 0x53, 0x5f, 0x42, 0x41, 0x44, 0x54, 0x4f, 0x4b, 0x45,
	0x4e, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x53, 0x53, 0x5f, 0x42, 0x41, 0x44, 0x44, 0x41,
	0x54, 0x41, 0x10, 0x06, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ldproto_ldproto_proto_rawDescOnce sync.Once
	file_ldproto_ldproto_proto_rawDescData = file_ldproto_ldproto_proto_rawDesc
)

func file_ldproto_ldproto_proto_rawDescGZIP() []byte {
	file_ldproto_ldproto_proto_rawDescOnce.Do(func() {
		file_ldproto_ldproto_proto_rawDescData = protoimpl.X.CompressGZIP(file_ldproto_ldproto_proto_rawDescData)
	})
	return file_ldproto_ldproto_proto_rawDescData
}

var file_ldproto_ldproto_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ldproto_ldproto_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_ldproto_ldproto_proto_goTypes = []interface{}{
	(Error)(0),                       // 0: lsxcg.dt.Error
	(*ProblemIdentifier)(nil),        // 1: lsxcg.dt.ProblemIdentifier
	(*ProblemEntityIdentifier)(nil),  // 2: lsxcg.dt.ProblemEntityIdentifier
	(*ProblemBucketIdentifier)(nil),  // 3: lsxcg.dt.ProblemBucketIdentifier
	(*ReadProblemRequest)(nil),       // 4: lsxcg.dt.ReadProblemRequest
	(*Product)(nil),                  // 5: lsxcg.dt.Product
	(*Demand)(nil),                   // 6: lsxcg.dt.Demand
	(*Machine)(nil),                  // 7: lsxcg.dt.Machine
	(*Problem)(nil),                  // 8: lsxcg.dt.Problem
	(*Column)(nil),                   // 9: lsxcg.dt.Column
	(*SolutionEntityIdentifier)(nil), // 10: lsxcg.dt.SolutionEntityIdentifier
	nil,                              // 11: lsxcg.dt.Machine.ProductionRatesEntry
	nil,                              // 12: lsxcg.dt.Machine.ChangeoverDurationsEntry
	nil,                              // 13: lsxcg.dt.Column.DemandsFfEntry
	(*Column_ProductInSequence)(nil), // 14: lsxcg.dt.Column.ProductInSequence
}
var file_ldproto_ldproto_proto_depIdxs = []int32{
	11, // 0: lsxcg.dt.Machine.production_rates:type_name -> lsxcg.dt.Machine.ProductionRatesEntry
	12, // 1: lsxcg.dt.Machine.changeover_durations:type_name -> lsxcg.dt.Machine.ChangeoverDurationsEntry
	5,  // 2: lsxcg.dt.Problem.products:type_name -> lsxcg.dt.Product
	6,  // 3: lsxcg.dt.Problem.demands:type_name -> lsxcg.dt.Demand
	7,  // 4: lsxcg.dt.Problem.machines:type_name -> lsxcg.dt.Machine
	13, // 5: lsxcg.dt.Column.demands_ff:type_name -> lsxcg.dt.Column.DemandsFfEntry
	14, // 6: lsxcg.dt.Column.prods_seq:type_name -> lsxcg.dt.Column.ProductInSequence
	9,  // 7: lsxcg.dt.SolutionEntityIdentifier.columns:type_name -> lsxcg.dt.Column
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_ldproto_ldproto_proto_init() }
func file_ldproto_ldproto_proto_init() {
	if File_ldproto_ldproto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ldproto_ldproto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProblemIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ldproto_ldproto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProblemEntityIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ldproto_ldproto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProblemBucketIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ldproto_ldproto_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadProblemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ldproto_ldproto_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ldproto_ldproto_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Demand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ldproto_ldproto_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ldproto_ldproto_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Problem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ldproto_ldproto_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ldproto_ldproto_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SolutionEntityIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ldproto_ldproto_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Column_ProductInSequence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ldproto_ldproto_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ldproto_ldproto_proto_goTypes,
		DependencyIndexes: file_ldproto_ldproto_proto_depIdxs,
		EnumInfos:         file_ldproto_ldproto_proto_enumTypes,
		MessageInfos:      file_ldproto_ldproto_proto_msgTypes,
	}.Build()
	File_ldproto_ldproto_proto = out.File
	file_ldproto_ldproto_proto_rawDesc = nil
	file_ldproto_ldproto_proto_goTypes = nil
	file_ldproto_ldproto_proto_depIdxs = nil
}
