syntax = "proto3";

package lsxcg.dt;

//
// Lotsize Solution Store Protocol
//

enum Error {
	LSS_NOERR					= 0;
	LSS_IOERR					= 1;
	LSS_BADPROBLEMID	= 2;
	LSS_BADSOLUTIONID	= 3;
	LSS_BADBUCKETID		= 4;
	LSS_BADTOKEN			= 5;
	LSS_BADDATA				= 6;
}

// Generic msgs
message ProblemIdentifier{
	string	problem_id	= 1;
};

message ProblemEntityIdentifier{
	string	problem_id	= 1;
	string	entity_id		= 2;
};

message ProblemBucketIdentifier{
	string	problem_id	= 1;
	string	machine_id	= 2;
	uint32	bucket_idx	= 3;
};


// ReadProblem
message ReadProblemRequest{
	string problem_str	= 1;
	string problem_file	= 2;
};

// LS Problem msgs
message Product{
	string	id						= 1;
	string	name					= 2;
	double	inv_unit_cost	= 3;
};

message Demand{
	string	id 					= 1;
	string	product_id	= 2;
	uint32	period_idx	= 3;
	double	quantity		= 4;
	double	unit_revenue= 5;
};

message Machine{
	string							id 										= 1;
	double							fixed_period_cost			= 2;
	map<string, double>	production_rates			= 3;
	map<string, double>	changeover_durations	= 4;
};

message Problem{
	string						name					= 1;
	uint32						num_periods		= 2;
	uint32						period_length	= 3;
	repeated Product	products 			= 4;
	repeated Demand		demands 			= 5;
	repeated Machine	machines 			= 6;
};

// Solution Improvement msgs
message Column{
	// BucketID
	string											machine_id	= 1;
	int32												bucket_idx	= 2;
	double											margin			= 3;
	map<string, double>					demands_ff	= 4;

	message ProductInSequence{
		string	product_id	= 1;
		uint32	prod_start	= 2;
		uint32	prod_minutes= 3;
	};
	repeated ProductInSequence	prods_seq		= 5;

	bool	is_selected	= 6;
	bool	is_fixed		= 7;
};

message SolutionEntityIdentifier{
	string						problem_id	= 1;
	string						solution_id = 2;
	string						imp_token		= 3;
	repeated	Column	columns			= 4;
};
